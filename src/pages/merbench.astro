---
import BaseLayout from '../layouts/BaseLayout.astro';
import LastUpdated from '../components/LastUpdated.astro';
import SummaryStats from '../components/merbench/SummaryStats.astro';
import LeaderboardTable from '../components/merbench/LeaderboardTable.astro';
import DifficultyFilter from '../components/merbench/DifficultyFilter.astro';
import ChartContainer from '../components/merbench/ChartContainer.astro';
import { renderMarkdownToHTML } from '../lib/merbench';
import type { MerbenchData } from '../lib/merbench-types';

// Load the processed data
import merbenchData from '../data/merbench_data.json';
const data = merbenchData as MerbenchData;

const { stats, leaderboard, config } = data;
const formattedDescription = renderMarkdownToHTML(config.description);
---

<BaseLayout title="Merbench - Andrew Ginns" bodyClass="wide-content">
  <div class="merbench-content">
    <h1>{config.title}</h1>
    <div class="intro" set:html={formattedDescription} />

    <SummaryStats stats={stats} />
    <LeaderboardTable leaderboard={leaderboard} />
    <DifficultyFilter difficulties={['easy', 'medium', 'hard']} />

    <ChartContainer chartId="pareto-chart" title="Performance vs Efficiency Trade-offs" />
    <ChartContainer chartId="test-group-chart" title="Performance by Difficulty Level" />
    <ChartContainer chartId="token-chart" title="Token Usage Breakdown" />
    <ChartContainer chartId="failure-analysis-chart" title="Failure Analysis by Reason" />

    <LastUpdated />
  </div>

  <!-- Load Plotly from CDN for charts -->
  <script is:inline src="https://cdn.plot.ly/plotly-2.35.2.min.js" charset="utf-8"></script>

  <!-- Initialize Charts and Filtering with TypeScript Modules -->
  <script>
    import '../scripts/merbench-init';

    // Initialize when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      if (typeof window.initializeMerbench === 'function') {
        window.initializeMerbench((window as any).merbenchData);
      } else {
        console.error('Merbench initialization function not found');
      }
    });
  </script>

  <!-- Make data available globally -->
  <script is:inline define:vars={{ data: merbenchData }}>
    window.merbenchData = data;
  </script>
</BaseLayout>

<style is:global>
  .merbench-content {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 1rem;
  }

  @media (min-width: 768px) {
    .merbench-content {
      padding: 0 2rem;
    }
  }

  /* Wider content on desktop for better data presentation */
  @media (min-width: 1025px) {
    .merbench-content {
      max-width: 1400px;
      padding: 0 2rem;
    }
  }

  @media (min-width: 1440px) {
    .merbench-content {
      max-width: calc(100% - 4rem);
      padding: 0 2rem;
    }
  }

  /* Mobile-specific layout fixes */
  @media (max-width: 768px) {
    .merbench-content {
      padding: 0.5rem;
      margin-top: 60px; /* Account for mobile header */
    }
  }

  .intro {
    font-size: 1.1rem;
    line-height: 1.8;
    margin-bottom: 3rem;
    color: var(--text-secondary);
  }

  .intro p {
    margin: 0 0 1rem 0;
  }

  .intro p:last-child {
    margin-bottom: 0;
  }

  @media (max-width: 768px) {
    .intro {
      font-size: 1rem;
      line-height: 1.6;
      margin-bottom: 2rem;
    }

    /* Better title spacing on mobile */
    h1 {
      font-size: 1.75rem;
      margin-bottom: 1rem;
    }
  }

  /* Summary Stats Styles */
  .summary-stats {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .summary-stats h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
  }

  /* Force 3 columns on desktop */
  @media (min-width: 1025px) {
    .stats-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
    }
  }

  @media (max-width: 425px) {
    .stats-grid {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }
  }

  .stat-card {
    background: var(--bg-primary);
    border-radius: 8px;
    padding: 1.5rem;
    text-align: center;
    border: 1px solid var(--border-color);
  }

  .stat-value {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--accent-primary);
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.85rem;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .stat-detail {
    font-size: 0.8rem;
    color: var(--text-light);
    margin-top: 0.25rem;
  }

  .providers-section {
    border-top: 1px solid var(--border-color);
    padding-top: 1.5rem;
  }

  .providers-section h3 {
    font-size: 1rem;
    color: var(--text-secondary);
    margin-bottom: 0.75rem;
  }

  .provider-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .provider-tag {
    background: var(--bg-primary);
    color: var(--accent-primary);
    padding: 0.375rem 0.75rem;
    border-radius: 16px;
    font-size: 0.85rem;
    font-weight: 500;
    border: 1px solid var(--border-color);
  }

  /* Leaderboard Styles */
  .leaderboard-section {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .leaderboard-section h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  .leaderboard-table {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
    position: relative;
    width: 100%;
    max-width: 100%;
  }

  /* Mobile scroll indicator */
  @media (max-width: 768px) {
    .leaderboard-table {
      margin: 0 -1rem;
      padding: 0 1rem;
      scrollbar-width: thin;
      scrollbar-color: var(--accent-primary) var(--bg-tertiary);
    }

    .leaderboard-table::-webkit-scrollbar {
      height: 6px;
    }

    .leaderboard-table::-webkit-scrollbar-track {
      background: var(--bg-tertiary);
    }

    .leaderboard-table::-webkit-scrollbar-thumb {
      background: var(--accent-primary);
      border-radius: 3px;
    }

    /* Visual scroll hint */
    .leaderboard-table::after {
      content: '\2192';
      position: absolute;
      top: 50%;
      right: 10px;
      transform: translateY(-50%);
      font-size: 1.5rem;
      color: var(--accent-primary);
      opacity: 0.5;
      pointer-events: none;
      animation: scrollHint 2s ease-in-out infinite;
    }

    @keyframes scrollHint {
      0%,
      100% {
        transform: translateY(-50%) translateX(0);
      }
      50% {
        transform: translateY(-50%) translateX(5px);
      }
    }
  }

  table {
    width: 100%;
    border-collapse: collapse;
    min-width: 600px; /* Ensure minimum width for readability */
  }

  /* Allow table to expand on larger viewports */
  @media (min-width: 1440px) {
    table {
      min-width: auto;
    }
  }

  @media (max-width: 768px) {
    table {
      font-size: 0.875rem;
    }
  }

  th,
  td {
    text-align: left;
    padding: 0.75rem;
    border-bottom: 1px solid var(--border-color);
  }

  th {
    background-color: var(--bg-primary);
    font-weight: 600;
    color: var(--text-secondary);
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  tbody tr:hover {
    background-color: var(--bg-primary);
  }

  .rank {
    font-weight: bold;
    color: var(--text-secondary);
  }

  .model-name {
    font-weight: 500;
    color: var(--text-primary);
  }

  /* Desktop optimizations for better data presentation */
  @media (min-width: 1025px) {
    table {
      font-size: 1rem;
    }

    th,
    td {
      padding: 0.75rem 0.5rem;
    }

    .model-name {
      min-width: 180px;
    }

    .progress-bar {
      min-width: 140px;
    }
  }

  /* Wider viewports - remove constraints to use available space */
  @media (min-width: 1440px) {
    th,
    td {
      padding: 0.875rem 0.75rem;
    }

    .model-name {
      min-width: auto;
      white-space: nowrap;
    }

    .progress-bar {
      min-width: auto;
      width: 100%;
    }
  }

  .progress-bar {
    position: relative;
    background-color: var(--bg-tertiary);
    height: 24px;
    border-radius: 12px;
    overflow: hidden;
    min-width: 150px;
  }

  .progress-fill {
    height: 100%;
    transition: width 0.3s ease;
  }

  .progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 0.75rem;
    font-weight: 600;
    color: white;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  }

  .cost {
    color: var(--accent-secondary);
    font-weight: 500;
  }

  .duration {
    color: #9c27b0;
  }

  .tokens {
    color: #ff5722;
  }

  @media (max-width: 768px) {
    .summary-stats,
    .leaderboard-section,
    .filter-section,
    .chart-section {
      padding: 1rem;
      margin-left: 0;
      margin-right: 0;
      border-radius: 0;
    }

    .stats-grid {
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 0.75rem;
    }

    .stat-value {
      font-size: 2rem;
    }

    th,
    td {
      padding: 0.5rem;
      font-size: 0.85rem;
    }

    .progress-bar {
      min-width: 100px;
    }

    /* Hide less important columns on mobile */
    th:nth-child(5), /* Duration */
    td:nth-child(5),
    th:nth-child(6), /* Tokens */
    td:nth-child(6),
    th:nth-child(7), /* Runs */
    td:nth-child(7) {
      display: none;
    }

    /* Optimize remaining columns */
    th:nth-child(4), /* Cost */
    td:nth-child(4) {
      min-width: 80px;
    }

    .progress-bar {
      min-width: 80px;
      height: 20px;
    }

    .progress-text {
      font-size: 0.7rem;
    }
  }

  /* Filter Styles */
  .filter-section {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .filter-section h2 {
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.2rem;
  }

  .filter-controls {
    display: flex;
    gap: 1.5rem;
    flex-wrap: wrap;
  }

  .filter-checkbox {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    user-select: none;
  }

  .filter-checkbox input[type='checkbox'] {
    width: 18px;
    height: 18px;
    cursor: pointer;
    accent-color: var(--accent-primary);
  }

  .checkbox-label {
    font-size: 0.95rem;
    color: var(--text-primary);
  }

  .filter-checkbox:hover .checkbox-label {
    color: var(--accent-primary);
  }

  /* Chart Styles */
  .chart-section {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .chart-section h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  .chart-container {
    width: 100%;
    height: 500px;
    position: relative;
    min-height: 400px;
    overflow: hidden;
  }

  /* Ensure charts are visible on mobile */
  @media (max-width: 768px) {
    .chart-container {
      width: calc(100vw - 2rem);
      max-width: 100%;
    }
  }

  @media (max-width: 768px) {
    .filter-section {
      padding: 1rem;
    }

    .filter-controls {
      gap: 1rem;
    }

    .chart-section {
      padding: 1rem;
    }

    .chart-container {
      height: 350px;
      min-height: 300px;
    }
  }

  @media (max-width: 425px) {
    .chart-container {
      height: 300px;
      min-height: 250px;
    }
  }
</style>
