---
import type { Stats } from '../../lib/merbench-types';

export interface Props {
  stats: Stats;
  sourceUrl?: string;
  lastUpdated?: string;
}

const { stats, sourceUrl, lastUpdated } = Astro.props;
---

<section class="summary-stats">
  <h2>Evaluation Summary</h2>
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-value">{stats.total_runs}</div>
      <div class="stat-label">Total Evaluation Runs</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">{stats.models_evaluated}</div>
      <div class="stat-label">Models Evaluated</div>
    </div>
    <div class="stat-card">
      <div class="stat-value">{stats.test_cases}</div>
      <div class="stat-label">Test Cases</div>
    </div>
  </div>
  <div class="providers-section">
    <div class="providers-row">
      <div class="providers-column">
        <h3>Providers Tested</h3>
        <div class="provider-tags">
          {stats.providers.map((provider) => <span class="provider-tag">{provider}</span>)}
        </div>
      </div>
      {
        (sourceUrl || lastUpdated) && (
          <div class="source-info">
            {sourceUrl && (
              <div class="source-link">
                <svg
                  width="14"
                  height="14"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  class="github-icon"
                >
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
                </svg>
                <a href={sourceUrl} target="_blank" rel="noopener noreferrer">
                  Source Code
                </a>
              </div>
            )}
            {lastUpdated && (
              <div class="last-updated">
                <span class="last-updated-label">Data updated:</span>
                <span class="last-updated-date">{lastUpdated}</span>
              </div>
            )}
          </div>
        )
      }
    </div>
  </div>
</section>

<style>
  /* Summary Stats Styles */
  .summary-stats {
    background: var(--bg-secondary);
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .summary-stats h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
  }

  /* Force 3 columns on desktop */
  @media (min-width: 1025px) {
    .stats-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: 1.5rem;
    }
  }

  @media (max-width: 425px) {
    .stats-grid {
      grid-template-columns: 1fr;
      gap: 0.75rem;
    }
  }

  .stat-card {
    background: var(--bg-primary);
    border-radius: 8px;
    padding: 1.5rem;
    text-align: center;
    border: 1px solid var(--border-color);
  }

  .stat-value {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--accent-primary);
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.85rem;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .providers-section {
    border-top: 1px solid var(--border-color);
    padding-top: 1.5rem;
  }

  .providers-row {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 2rem;
  }

  .providers-column {
    flex: 1;
  }

  .providers-section h3 {
    font-size: 1rem;
    color: var(--text-secondary);
    margin-bottom: 0.75rem;
  }

  .provider-tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .provider-tag {
    background: var(--bg-primary);
    color: var(--accent-primary);
    padding: 0.375rem 0.75rem;
    border-radius: 16px;
    font-size: 0.85rem;
    font-weight: 500;
    border: 1px solid var(--border-color);
  }

  .source-info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    align-items: flex-end;
    text-align: right;
    flex-shrink: 0;
  }

  .source-link {
    display: flex;
    align-items: center;
    gap: 0.375rem;
  }

  .source-link a {
    color: var(--accent-primary);
    text-decoration: none;
    font-weight: 500;
    font-size: 0.85rem;
    transition: color 0.2s ease;
  }

  .source-link a:hover {
    color: var(--text-primary);
    text-decoration: underline;
  }

  .github-icon {
    color: var(--text-secondary);
    transition: color 0.2s ease;
  }

  .source-link:hover .github-icon {
    color: var(--accent-primary);
  }

  .last-updated {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.8rem;
  }

  .last-updated-label {
    color: var(--text-secondary);
  }

  .last-updated-date {
    color: var(--text-primary);
    font-weight: 500;
  }

  @media (max-width: 768px) {
    .summary-stats {
      padding: 1rem;
      margin-left: 0;
      margin-right: 0;
      border-radius: 0;
    }

    .stats-grid {
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 0.75rem;
    }

    .stat-value {
      font-size: 2rem;
    }

    .providers-row {
      flex-direction: column;
      gap: 1rem;
    }

    .source-info {
      align-items: flex-start;
      text-align: left;
    }

    .source-link a {
      font-size: 0.8rem;
    }

    .last-updated {
      font-size: 0.75rem;
    }
  }
</style>
