---
const buildDate = new Date();
const formattedDate = buildDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  hour: '2-digit',
  minute: '2-digit',
  timeZone: 'UTC',
  timeZoneName: 'short',
});
---

<div class="last-updated">
  <div class="updated-info">
    <div class="build-info">
      <svg
        width="16"
        height="16"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <circle cx="12" cy="12" r="10"></circle>
        <path d="m12 6 0 6 4 2"></path>
      </svg>
      <span>Last updated: {formattedDate}</span>
    </div>
    <div class="source-link">
      <a
        href="https://github.com/andrewginns/andrewginns.github.io"
        target="_blank"
        rel="noopener noreferrer"
      >
        <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
          <path
            d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
          ></path>
        </svg>
        View Source
      </a>
    </div>
  </div>
</div>

<style>
  .last-updated {
    margin-top: 4rem;
    padding: 2rem;
    background: linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-tertiary) 100%);
    border-radius: 12px;
    border: 1px solid var(--border-color);
    box-shadow: 0 4px 12px var(--shadow-light);
  }

  .updated-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
  }

  .build-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--text-secondary);
  }

  .build-info svg {
    color: var(--accent-primary);
    opacity: 0.8;
    margin-top: 1px;
  }

  .source-link a {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 1.5rem;
    background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 500;
    min-height: 48px;
    min-width: 130px;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: 0 2px 8px rgba(231, 76, 60, 0.3);
  }

  /* Only apply hover effects on devices that can actually hover */
  @media (hover: hover) {
    .source-link a:hover {
      transform: translateY(-2px) scale(1.05);
      box-shadow: 0 6px 16px rgba(231, 76, 60, 0.4);
    }

    .source-link a:hover svg {
      transform: scale(1.1);
    }
  }

  /* Touch-friendly styles for mobile devices */
  @media (hover: none) {
    .source-link a:active {
      transform: scale(0.95);
      box-shadow: 0 2px 6px rgba(231, 76, 60, 0.5);
    }
  }

  .source-link svg {
    opacity: 0.9;
    transition: transform 0.2s ease;
  }

  @media (max-width: 768px) {
    .last-updated {
      margin-top: 3rem;
      padding: 1.5rem;
    }

    .updated-info {
      flex-direction: column;
      text-align: center;
      gap: 1.5rem;
    }

    .build-info {
      justify-content: center;
      font-size: 0.8rem;
    }

    .source-link a {
      font-size: 0.8rem;
      padding: 0.6rem 1.2rem;
    }
  }
</style>
